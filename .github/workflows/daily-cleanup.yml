name: Daily Cleanup

on:
  schedule:
    # Runs every day at 00:00 UTC
    - cron: "0 0 * * *"
  workflow_dispatch: # Allow manual trigger for testing

jobs:
  cleanup:
    name: Cleanup Expired Data
    runs-on: ubuntu-latest

    steps:
      - name: Call cleanup endpoint
        run: |
          echo "🧹 Starting daily cleanup at $(date)"

          # Make POST request to the cleanup endpoint with authorization
          response=$(curl -s -w "%{http_code}" -X POST "${{ secrets.SITE_URL }}/api/temporary/cleanup" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CLEANUP_SECRET }}" \
            -H "User-Agent: GitHub-Actions-Cleanup/1.0")

          # Extract HTTP status code (last 3 characters)
          http_code="${response: -3}"

          # Extract response body (everything except last 3 characters)
          response_body="${response%???}"

          echo "📊 HTTP Status: $http_code"
          echo "📋 Response: $response_body"

          # Check if request was successful
          if [ "$http_code" -eq 200 ]; then
            echo "✅ Cleanup completed successfully"
            
            # Parse and display cleanup results
            if command -v jq &> /dev/null; then
              rooms_deleted=$(echo "$response_body" | jq -r '.roomsDeleted')
              users_deleted=$(echo "$response_body" | jq -r '.usersDeleted')
              echo "🏠 Rooms deleted: $rooms_deleted"
              echo "👥 Users deleted: $users_deleted"
              
              # Create cleanup report for artifact
              cleanup_date=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
              cat > cleanup-report.json << EOF
          {
            "timestamp": "$cleanup_date",
            "date": "$(date -u +"%Y-%m-%d")",
            "roomsDeleted": $rooms_deleted,
            "usersDeleted": $users_deleted,
            "totalItemsDeleted": $((rooms_deleted + users_deleted)),
            "httpStatus": $http_code,
            "success": true
          }
          EOF
              
              # Create human-readable report
              cat > cleanup-report.md << EOF
          # Daily Cleanup Report

          **Date:** $cleanup_date

          ## Results
          - 🏠 **Rooms deleted:** $rooms_deleted
          - 👥 **Users deleted:** $users_deleted
          - 📊 **Total items deleted:** $((rooms_deleted + users_deleted))

          ## Status
          - ✅ **Success:** true
          - 🌐 **HTTP Status:** $http_code

          ---
          Generated by GitHub Actions Daily Cleanup
          EOF
              
              echo "📄 Cleanup report generated"
            else
              echo "⚠️ jq not available, creating basic report"
              cleanup_date=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
              cat > cleanup-report.json << EOF
          {
            "timestamp": "$cleanup_date",
            "date": "$(date -u +"%Y-%m-%d")",
            "rawResponse": "$response_body",
            "httpStatus": $http_code,
            "success": true
          }
          EOF
            fi
          else
            echo "❌ Cleanup failed with status $http_code"
            echo "Response: $response_body"
            
            # Create failure report
            cleanup_date=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            cat > cleanup-report.json << EOF
          {
            "timestamp": "$cleanup_date",
            "date": "$(date -u +"%Y-%m-%d")",
            "error": "$response_body",
            "httpStatus": $http_code,
            "success": false
          }
          EOF
            
            cat > cleanup-report.md << EOF
          # Daily Cleanup Report - FAILED

          **Date:** $cleanup_date

          ## Error
          - ❌ **HTTP Status:** $http_code
          - 📝 **Error Response:** $response_body

          ---
          Generated by GitHub Actions Daily Cleanup
          EOF
            
            exit 1
          fi

      - name: Upload cleanup report
        uses: actions/upload-artifact@v4
        if: always() # Upload artifact even if cleanup failed
        with:
          name: cleanup-report-${{ github.run_number }}
          path: |
            cleanup-report.json
            cleanup-report.md
          retention-days: 90

      - name: Cleanup summary
        if: success()
        run: |
          echo "🎉 Daily cleanup completed successfully at $(date)"
          echo "✨ Expired rooms and users have been removed from the database"
          echo "📦 Cleanup report has been saved as artifact: cleanup-report-${{ github.run_number }}"
          echo "📊 You can download the detailed report from the Actions tab"

          # Display summary if report exists
          if [ -f "cleanup-report.json" ]; then
            echo ""
            echo "📋 Quick Summary:"
            if command -v jq &> /dev/null; then
              echo "   🏠 Rooms: $(jq -r '.roomsDeleted // "N/A"' cleanup-report.json)"
              echo "   👥 Users: $(jq -r '.usersDeleted // "N/A"' cleanup-report.json)"
              echo "   📊 Total: $(jq -r '.totalItemsDeleted // "N/A"' cleanup-report.json)"
            fi
          fi
